<html>
	<head>
		<title>Route Map</title>
		<script src="https://polyfill.io/v3/polyfill.min.js?features=default"></script>
	</head>
	<body>
		<div><p id="route-time"></p></div>
		<div>
			<% @course.each do |t| %>
				<div class="startdestination">
					<%= t.start %>
					<%= t.waypoints%>
					<%= t.destination %>
				</div>
			<% end %>
		</div>
		<div id="map" style="width: 100vw; height: 80vh;"></div>
		<%# <%= form_for @course do |f|%>

		<%# <%= f.submit "経路検索" ,id: "search_route" %>
	</body>
</html>
<script>
	var directionsService;
	var directionsRenderer;
	var distanceMatrixservice;
	var start = "<%= @courses[-1].start %>";
	var destination = "<%= @courses[-1].destination %>";
	var waypoint = "<%= @courses[-1].waypoints %>";
	const transportation = "<%= @courses[-1].transportation_origin %>";
	const tmp = "<%= @courses[-1].transportation %>";
	var tmps = tmp.split(",");
	const mar = [];
	const routes = [];
	const transportations = [];
	let count = 0;
	const history = "";

	console.log(transportation + "b");
	transportations.push(transportation);
	for(var i in tmps){
		transportations.push(tmps[i])
	}

	function resolveAfter2Seconds() {
		return new Promise((resolve) => {
			setTimeout(() => {
			resolve('resolved');
			}, 500);
		});
	}

	async function initMap() {

		//マップを表示する要素を指定
		var target = document.getElementById('map');
		var geocoder = new google.maps.Geocoder();
		var marker = [];
		var waypoints = waypoint.split(",");
		let t = 0;

		routes.push(start);
		if(waypoints[0]!=""){
			for (var k in waypoints) {
				routes.push(waypoints[k]);
			}
		}
		routes.push(destination);

		directionsService = new google.maps.DirectionsService();
		directionsRenderer = new google.maps.DirectionsRenderer();
		distanceMatrixservice = new google.maps.DistanceMatrixService();

		for (var k in routes) {
			geocoder.geocode({ address: routes[k] }, function(results, status){
				if (status === 'OK' && results[0]){
					mar.push({
                        "name": routes[k],
                        'lat': results[0].geometry.location.lat(),
                        'lng': results[0].geometry.location.lng()
                    });
				}else{
					//住所が存在しない場合の処理
					alert('住所が正しくないか存在しません。');
					target.style.display='none';
				}
				if(t==0){
					var markerLatLng = new google.maps.LatLng({lat: mar[0]['lat'], lng: mar[0]['lng']});
					map = new google.maps.Map(target, {
						center: markerLatLng,
						zoom: 15
					});
					t+=1
				}else if(k!=routes.length){
					setLocation(mar);
					count+=1;
				}
			});
			const result = await resolveAfter2Seconds();
		}

	}
	function setLocation(ma){
		console.log(ma);
		console.log(transportations);
    	// 所要時間取得
		if(transportations[count]==="")
		distanceMatrixservice.getDistanceMatrix({
			origins: [ma[count]["lat"] +"," + ma[count]["lng"]], // 出発地
			destinations: [ma[count+1]["lat"] +"," + ma[count+1]["lng"]], // 目的地
			travelMode: google.maps.TravelMode.DRIVING, // 移動手段
		}, timeRequired)
		directionsService.route({
			origin: routes[count],
			destination: routes[count+1],
			travelMode: google.maps.TravelMode.DRIVING
		}, function(response, status) {
			if (status === google.maps.DirectionsStatus.OK) {
				// ルート検索の結果を地図上に描画
				console.log("a");
				directionsRenderer.setMap(map);
				directionsRenderer.setDirections(response);
			}
		});
	}

	function timeRequired(response, status) {
		if(status == "OK") {
			var origins = response.originAddresses;
			var destinations = response.destinationAddresses;
			console.log(origins);
			console.log(destinations);
			for (var i = 0; i < origins.length; i++) {
				var results = response.rows[i].elements;
				for (var j = 0; j < results.length; j++) {
					var element = results[j];
					var distance = element.distance.text;
					var duration = element.duration.text;
					var from = origins[i];
					var to = destinations[j];
				}
			}
			
			var routeTime = document.getElementById("route-time");
			routeTime.innerHTML = "およそ" + duration + "で着きます"
		}
	}
</script>

<script src="//maps.google.com/maps/api/js?key=<%= ENV['GOOGLE_MAP_KEY'] %>&callback=initMap"></script>